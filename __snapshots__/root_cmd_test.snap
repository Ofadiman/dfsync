
[TestRootCommandSuite/TestShouldCreateBackupFileWhenFileExistsAndBackupIsPassedToConflictResolutionOption - 1]
DEBU command has been called with the following flags: --source-directory=/tmp/source/, --dry=false, --conflict-resolution=backup
DEBU home directory: /home/golang/
DEBU absolute path to source directory: /tmp/source
DEBU processing path: /tmp/source
DEBU visiting source directory, no action required
DEBU processing path: /tmp/source/foo.txt
WARN path /home/golang/foo.txt already exists, the file will be backed up and symlink will be created because --conflict-resolution flag is set to backup
INFO file has been successfully backup up under /home/golang/foo.txt.bak
INFO symlink from "/tmp/source/foo.txt" to "/home/golang/foo.txt" created

---

[TestRootCommandSuite/TestShouldDoNothingWhenDryModeIsOn - 1]
DEBU command has been called with the following flags: --source-directory=/tmp/source/, --dry=true, --conflict-resolution=no-action
DEBU home directory: /home/golang/
DEBU absolute path to source directory: /tmp/source
DEBU processing path: /tmp/source
DEBU visiting source directory, no action required
DEBU processing path: /tmp/source/foo.txt
INFO symlink from "/tmp/source/foo.txt" to "/home/golang/foo.txt" created
DEBU processing path: /tmp/source/nested
WARN directory "/home/golang/nested" does not exist
INFO directory /home/golang/nested created
DEBU processing path: /tmp/source/nested/bar.txt
INFO symlink from "/tmp/source/nested/bar.txt" to "/home/golang/nested/bar.txt" created

---

[TestRootCommandSuite/TestShouldDoNothingWhenFileExistsAndNoActionIsPassedToConflictResolutionOption - 1]
DEBU command has been called with the following flags: --source-directory=/tmp/source/, --dry=false, --conflict-resolution=no-action
DEBU home directory: /home/golang/
DEBU absolute path to source directory: /tmp/source
DEBU processing path: /tmp/source
DEBU visiting source directory, no action required
DEBU processing path: /tmp/source/foo.txt
WARN path /home/golang/foo.txt already exists, symlink will not be created because --conflict-resolution flag is set to no-action

---

[TestRootCommandSuite/TestShouldDoNothingWhenSourceDirectoryIsEmpty - 1]
DEBU command has been called with the following flags: --source-directory=/tmp/source/, --dry=false, --conflict-resolution=no-action
DEBU home directory: /home/golang/
DEBU absolute path to source directory: /tmp/source
DEBU processing path: /tmp/source
DEBU visiting source directory, no action required
DEBU processing path: /tmp/source/nested
WARN directory "/home/golang/nested" does not exist
WARN directory /tmp/source/nested is empty, continue to next iteration

---

[TestRootCommandSuite/TestShouldExitEarlyWhenConflictResolutionFlagIsInvalid - 1]
DEBU command has been called with the following flags: --source-directory=/home/golang/dfsync, --dry=false, --conflict-resolution=bar
ERRO invalid value passed to --conflict-resolution flag, received bar

---

[TestRootCommandSuite/TestShouldExitEarlyWhenPathPassedToSourceDirectoryOptionDoesNotExist - 1]
DEBU command has been called with the following flags: --source-directory=/foo/bar/buzz, --dry=false, --conflict-resolution=no-action
ERRO path passed to --source-directory option does not exist, received /foo/bar/buzz

---

[TestRootCommandSuite/TestShouldExitEarlyWhenPathPassedToSourceDirectoryOptionIsNotDirectory - 1]
DEBU command has been called with the following flags: --source-directory=/tmp/foo.txt, --dry=false, --conflict-resolution=no-action
ERRO path passed to --source-directory option is not directory, received /tmp/foo.txt

---

[TestRootCommandSuite/TestShouldExitEarlyWhenSourceDirectoryIsEmpty - 1]
DEBU command has been called with the following flags: --source-directory=/tmp/source/, --dry=false, --conflict-resolution=no-action
ERRO directory passed to --source-directory option is empty, received /tmp/source/

---

[TestRootCommandSuite/TestShouldOverrideFileWhenFileExistsAndOverrideIsPassedToConflictResolutionOption - 1]
DEBU command has been called with the following flags: --source-directory=/tmp/source/, --dry=false, --conflict-resolution=override
DEBU home directory: /home/golang/
DEBU absolute path to source directory: /tmp/source
DEBU processing path: /tmp/source
DEBU visiting source directory, no action required
DEBU processing path: /tmp/source/foo.txt
WARN path /home/golang/foo.txt already exists, the file will be deleted and symlink will be created because --conflict-resolution flag is set to override
INFO symlink from "/tmp/source/foo.txt" to "/home/golang/foo.txt" created

---

[TestRootCommandSuite/TestShouldShowHelpMenuWhenCalledWithoutArguments - 1]
Dot files sync is a tool that allows you to painlessly synchronize dot files across multiple environments.

Usage:
  dfsync [flags]

Examples:
dfsync --source-directory ./src

Flags:
  -c, --conflict-resolution string   decide what to do with the file that exists where the symlink should be created (valid options: "no-action", "backup", "override") (default "no-action")
  -d, --dry                          simulate the execution of the command without modifying the file system
  -h, --help                         help for dfsync
  -s, --source-directory string      directory from which symlinks will be created (default "/home/golang/dfsync")
  -v, --version                      version for dfsync

---
